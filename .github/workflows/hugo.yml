name: test hugo

on: [pull_request]

env:
  NODE_VERSION: 22
  HUGO_VERSION: 0.126.1

jobs:
  lint:
    outputs:
      source_content_hash: ${{ steps.calc-hash.outputs.result }}
      changed_files_key_part: ${{ steps.changed-files-key.outputs.key_part }}
      debug_changed_files_list: ${{ steps.changed-files-key.outputs.debug_changed_files_list }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true # Fetch Hugo themes (true OR recursive)
          fetch-depth: 2 # Fetch enough history for HEAD~1

      - name: Get changed files key
        id: changed-files-key
        run: |
          # Get list of changed files, sort them, then hash the list.
          git diff --name-only HEAD~1 HEAD | LC_ALL=C sort | md5sum | head -c 32 > changed_files_key_part.txt
          echo "key_part=$(cat changed_files_key_part.txt)" >> $GITHUB_OUTPUT
          ACTUAL_FILES=$(git diff --name-only HEAD~1 HEAD | LC_ALL=C sort | tr '\n' ' ' | sed 's/ $//')
          echo "debug_changed_files_list=${ACTUAL_FILES}" >> $GITHUB_OUTPUT

      - name: Calc hash
        id: calc-hash
        run: |
          # Calculate md5sum for each file, sort the output (for consistent ordering),
          # then calculate md5sum of that list of hashes. head -c 32 takes the md5 hash string.
          find . -path ./.git -prune -o -type f -print0 | xargs -0 md5sum | LC_ALL=C sort -k 2 | md5sum | head -c 32 > hash.txt
          hash_value=$(cat hash.txt)
          echo "result=$hash_value" >> $GITHUB_OUTPUT

      - name: Debug Cache Key
        run: |
          echo "calc-hash output: ${{ steps.calc-hash.outputs.result }}"
          echo "changed-files key part: ${{ steps.changed-files-key.outputs.key_part }}"
          echo "changed-files actual list: ${{ steps.changed-files-key.outputs.debug_changed_files_list }}"

      - name: Upload Hugo source artifact
        uses: actions/upload-artifact@v4
        with:
          # Cache only the specific directories and files needed for the Hugo build, and not capturing the full .git folder.
          path: |
            archetypes
            assets
            config
            content
            data
            layouts
            static
            themes
          name: hugo-source-files

      - name: Lint Filenames
        uses: julie-ng/lowercase-linter@v1
        id: lint_filenames
        continue-on-error: false
        with:
          path: "."
          pr-comment: true
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  test-linux:
    needs: lint
    name: Build hugo on Linux
    runs-on: ubuntu-latest
    steps:
      - name: Download Hugo source artifact
        uses: actions/download-artifact@v4
        with:
          name: hugo-source-files
          path: . # Download to the root of the workspace

      - name: Debug Cache Key
        run: |
          echo "Using source_content_hash from lint job: ${{ needs.lint.outputs.source_content_hash }}"
          echo "Using changed_files_key_part from lint job: ${{ needs.lint.outputs.changed_files_key_part }}"
          echo "Actual changed files list from lint job: ${{ needs.lint.outputs.debug_changed_files_list }}"

      - name: Cache Hugo build outputs
        id: cache-hugo-build
        uses: actions/cache@v4
        with:
          # Cache Hugo's generated 'public' directory and 'resources' directory
          path: |
            public
            resources
          key: ${{ runner.os }}-hugo-build-${{ needs.lint.outputs.source_content_hash }}-${{ needs.lint.outputs.changed_files_key_part }}
          restore-keys: |
            ${{ runner.os }}-hugo-build-${{ needs.lint.outputs.source_content_hash }}-

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: ${{ env.HUGO_VERSION }}
          extended: true

      - name: Build Hugo
        # If cache hit for Hugo build outputs, this step might still run but Hugo might determine nothing needs to be rebuilt.
        # For a more explicit skip, you could check `steps.cache-hugo-build.outputs.cache-hit`
        # if: steps.cache-hugo-build.outputs.cache-hit != 'true'
        run: |
          hugo --environment=production --minify --templateMetrics --logLevel info

  # test-windows:
  #   needs: lint
  #   name: Build hugo on Windows
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         submodules: true # Fetch Hugo themes (true OR recursive)
  #         fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod

  #     - name: Setup Hugo
  #       uses: peaceiris/actions-hugo@v2
  #       with:
  #         hugo-version: ${{ env.HUGO_VERSION }}


  #     - name: Build
  #       run: hugo -v
